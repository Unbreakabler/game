{"version":3,"file":"workshop.svelte.js","sources":["../../../../src/app/workshop.svelte"],"sourcesContent":["<script lang='ts'>\n  /**\n   * DESIGN:\n   * Merging game for towers/turrets.\n   * A basic grid where \"turrets\" spawn.\n   * You can then drag identical \"turrets\" onto each other to merge them. You can merge with the turrets you have currently equipped in a slot to upgrade your placed turrets.\n  */\n  import { v4 as uuidv4 } from 'uuid';\n\n\n  // Generate initial items for testing\n  const item_map: { [id: string]: { id: string, type: string, tier: number }} = {};\n  for (let i =0; i < 100; i++) {\n    let id = uuidv4()\n    item_map[id] = { id, type: 'dirt', tier: 0}\n  }\n\n  let dragging: { id: string, type: string, tier: number } | null = null;\n  let over: { id: string, type: string, tier: number } | null = null;\n\n  const dragStart = (e: DragEvent) => { \n    const element_id = e.target?.getAttribute('id')\n    dragging = item_map[element_id];\n\n  }\n  const dragEnter = (e: DragEvent) => { \n    const element_id = e.target?.getAttribute('id')\n    over = item_map[element_id]\n    \n  }\n\n  const dragLeave = (e: DragEvent) => { \n    over = null;\n  }\n  const dragEnd = (e: DragEvent) => { \n    dragging = null;\n    over = null;\n  }\n\n  const dragDrop = (e: DragEvent) => { \n    e.preventDefault();\n    // if dragging and over are combinable, combine them.\n    // add the new combined element to the item_map, remove the old items.\n    if (dragging && over && dragging.type === over.type && dragging.tier === over.tier) {\n      delete item_map[dragging.id]\n      delete item_map[over.id]\n      let id = uuidv4();\n      // TODO(jon): Items should keep their order in the list, slots should s\n      item_map[id] = { id, tier: dragging.tier + 1, type: dragging.type}\n    }\n  }\n\n</script>\n\n<div>\n  <div class=\"merge-container\">\n    {#each Object.entries(item_map) as [id, item]}\n      <div \n        id={id}\n        class=\"item\" \n        draggable=true\n        on:dragstart={dragStart}\n        on:dragend={dragEnd}\n        on:dragenter={dragEnter}\n        on:dragleave={dragLeave}\n        on:drop={dragDrop}\n        ondragover=\"return false\"\n      >\n        <span>{item.type} - {item.tier}</span>\n      </div>\n    {/each}\n  </div>\n</div>\n\n\n<style>\n  .merge-container {\n    user-select: none;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(50px, 1fr));\n    grid-auto-rows: 50px;\n    gap: 20px;\n  }\n\n  .item {\n    cursor: move;\n    border: 1px solid red;\n  }\n  span {\n    pointer-events: none;\n  }\n</style>"],"names":["uuidv4"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;yBAoEe,GAAI,IAAC,IAAI;;;yBAAK,GAAI,IAAC,IAAI;;;;;;;;;;;;;;;;yCAV1B,GAAE;;;;;;;;;;;;;;;4CAGQ,GAAS;wCACX,GAAO;4CACL,GAAS;4CACT,GAAS;sCACd,GAAQ;;;;;;;mEAGV,GAAI,IAAC,IAAI;mEAAK,GAAI,IAAC,IAAI;;yEAV1B,GAAE;;;;;;;;;;;;;;;kBAFH,MAAM,CAAC,OAAO,cAAC,GAAQ;;;gCAA5B,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;iBAAC,MAAM,CAAC,OAAO,cAAC,GAAQ;;;+BAA5B,MAAI;;;;;;;;;;;;;;;;oCAAJ,MAAI;;;;;;;;;;;;;OA7CF,QAAQ;;UACL,CAAC,GAAE,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC;MACnB,EAAE,GAAGA,EAAM;EACf,QAAQ,CAAC,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;;;KAGxC,QAAQ,GAAsD,IAAI;KAClE,IAAI,GAAsD,IAAI;;OAE5D,SAAS,GAAI,CAAY;QACvB,UAAU,GAAG,CAAC,CAAC,MAAM,EAAE,YAAY,CAAC,IAAI;EAC9C,QAAQ,GAAG,QAAQ,CAAC,UAAU;;;OAG1B,SAAS,GAAI,CAAY;QACvB,UAAU,GAAG,CAAC,CAAC,MAAM,EAAE,YAAY,CAAC,IAAI;EAC9C,IAAI,GAAG,QAAQ,CAAC,UAAU;;;OAItB,SAAS,GAAI,CAAY;EAC7B,IAAI,GAAG,IAAI;;;OAEP,OAAO,GAAI,CAAY;EAC3B,QAAQ,GAAG,IAAI;EACf,IAAI,GAAG,IAAI;;;OAGP,QAAQ,GAAI,CAAY;EAC5B,CAAC,CAAC,cAAc;;;;MAGZ,QAAQ,IAAI,IAAI,IAAI,QAAQ,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI;UACzE,QAAQ,CAAC,QAAQ,CAAC,EAAE;UACpB,QAAQ,CAAC,IAAI,CAAC,EAAE;OACnB,EAAE,GAAGA,EAAM;;;;;IAEf,QAAQ,CAAC,EAAE;KAAM,EAAE;KAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,GAAG,CAAC;KAAE,IAAI,EAAE,QAAQ,CAAC,IAAI;;;;;;;;;;;;;;;;;;;;"}