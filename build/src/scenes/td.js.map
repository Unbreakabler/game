{"version":3,"file":"td.js","sources":["../../../../src/scenes/td.ts"],"sourcesContent":["import \"phaser\";\n\nimport { GameModel, gameModel } from \"../gamelogic/gamemodel\";\n\nimport type Enemy from \"./entities/enemies/enemy\";\nimport type Bullet from \"./entities/tower_bullet\";\n\nimport GreenKnight from \"./entities/enemies/green_knight\";\nimport BaseTurret from \"./entities/towers/base_turret\";\nimport MachineGun from \"./entities/towers/machine_gun\";\nimport type Turret from \"./entities/towers/turret\";\n\nlet gameModelInstance: GameModel;\ngameModel.subscribe((m) => (gameModelInstance = m));\n\nexport default class TD extends Phaser.Scene {\n  public path!: Phaser.Curves.Path;\n  private nextEnemy = 0;\n  public enemies!: BetterGroup<Enemy>;\n  public turrets!: BetterGroup<Turret>;\n  public machine_guns!: BetterGroup<MachineGun>;\n  public selection!: Turret | null;\n  private selection_type: string | null = null;\n\n  public constructor() {\n    super({ key: \"td\", active: true });\n  }\n\n  public preload(): void {\n    this.load.image(\"turret\", \"static/shotgun.png\");\n    this.load.image(\"machine_gun\", \"static/machine_gun.png\");\n    this.load.image(\"small_bullet\", \"static/small_bullet.png\");\n    this.load.spritesheet(\"green-knight\", \"static/green_knight.png\", {\n      frameWidth: 329/16,\n      frameHeight: 30,\n    });\n  }\n\n  public create(): void {\n    this.generateAnimations();\n    this.drawPath();\n    this.setupEntities();\n    this.setupModelSubscriptions();\n    this.setupInputHandlers();\n\n  }\n\n  private generateAnimations() {\n    // Set up animations\n    this.anims.create({\n      key: 'green-knight-walking-down',\n      frames: this.anims.generateFrameNames('green-knight', {start: 0, end: 3}),\n      frameRate: 3,\n      repeat: -1\n    })\n    this.anims.create({\n      key: 'green-knight-walking-right',\n      frames: this.anims.generateFrameNames('green-knight', {start: 4, end: 7}),\n      frameRate: 3,\n      repeat: -1\n    })\n    this.anims.create({\n      key: 'green-knight-walking-left',\n      frames: this.anims.generateFrameNames('green-knight', {start: 8, end: 11}),\n      frameRate: 3,\n      repeat: -1\n    })\n    this.anims.create({\n      key: 'green-knight-walking-up',\n      frames: this.anims.generateFrameNames('green-knight', {start: 12, end: 15}),\n      frameRate: 3,\n      repeat: -1\n    })\n  }\n\n  private drawPath() {\n    const graphics = this.add.graphics();    \n    \n    // The path for the current level, the coorodinates should be stored as a list\n    // of tuples and be loaded on level start.\n    this.path = this.add.path(96, -32);\n    this.path.lineTo(96, 264);\n    this.path.lineTo(500, 264);\n    this.path.lineTo(500, 114);\n    this.path.lineTo(300, 114);\n    this.path.lineTo(300, 514);\n    this.path.lineTo(96, 514);\n    this.path.lineTo(96, 380);\n    this.path.lineTo(850, 380);\n\n    // This will be swapped out for tiles eventually but for now we'll draw a white line.\n    graphics.lineStyle(3, 0xffffff, 1);\n    this.path.draw(graphics);\n  }\n\n  private setupEntities() {\n    // Add gameobject groups for towers and enemies, these manage interactions and collisions\n    this.turrets = this.add.group({ classType: BaseTurret, runChildUpdate: true }) as BetterGroup<Turret>;\n    this.machine_guns = this.add.group({ classType: MachineGun, runChildUpdate: true }) as BetterGroup<Turret>;\n    this.enemies = this.add.group({ classType: GreenKnight, runChildUpdate: true }) as BetterGroup<Enemy>;\n  }\n\n  private setupModelSubscriptions() {\n    const unsubscribe_store = gameModel.subscribe((model) => {   \n      const selection_type = model.tower_defense.selection?.type || null\n\n      // TODO(jon): This needs to operate by selecting tower_id's\n      // These ids need to be saved in the instantiated game object\n      // When the gameobject is slected in phaser that selection can then propogate up\n      // to the svelte store.\n      if (selection_type !== this.selection_type) {\n        this.selection?.destroy();\n        if (selection_type === 'basic') {\n          this.selection = this.turrets?.get();\n        } else if (selection_type === 'machine_gun') {\n          this.selection = this.machine_guns?.get();\n        } else {\n          this.selection = null;\n        }\n\n        if (this.selection) {\n          this.selection.setVisible(false);\n        }\n        this.selection_type = selection_type\n      }\n    });\n    this.events.on(\"destroy\", function () {\n      unsubscribe_store();\n    });\n  }\n\n  private setupInputHandlers() {\n    // Place turrets on click, this will be changed to be a drag/drop from a tower menu\n    this.input.on(\"pointerdown\", this.selectUnderCursor.bind(this));\n    this.input.on(\"pointerdown\", this.placeTurret.bind(this));\n    this.input.on('pointermove', this.testTurretPlacement.bind(this));\n  }\n\n  public update(time: number, delta: number): void {\n    // if its time for the next enemy\n    if (time > this.nextEnemy) {\n      const enemy = new GreenKnight(this);\n      this.enemies.add(enemy, true);\n      // place the enemy at the start of the path\n      enemy.startOnPath(this.path);\n      this.nextEnemy = time + 2000;\n    }\n  }\n\n  public testTurretPlacement(pointer: Phaser.Input.Pointer, game_objects_under_pointer: Phaser.GameObjects.GameObject[]) {\n    if (!this.selection) return;\n    this.selection.setVisible(true);\n    this.selection.show_range = true;\n    this.selection.x = pointer.x;\n    this.selection.y = pointer.y;\n  }\n\n  public placeTurret(pointer: Phaser.Input.Pointer, game_objects_under_pointer: Phaser.GameObjects.GameObject[]): boolean {\n    if (!this.selection) return false;\n    const place_x = Math.floor(pointer.x);\n    const place_y = Math.floor(pointer.y);\n    \n    // if (game_objects_under_pointer.length === 0) {\n    const t = this.selection;\n    if (!t.place(place_x, place_y)) {\n      t.destroy();\n      return false;\n    }\n    this.turrets.add(t, true);\n    t.enableBulletCollisions(this.enemies);\n    if (gameModelInstance.tower_defense.selection) {\n      gameModelInstance.tower_defense.placeTower(gameModelInstance.tower_defense.selection.id, place_x, place_y)\n    }\n    this.selection = null;\n    gameModelInstance.tower_defense.selection = null;\n    return true;\n  }\n\n  public selectUnderCursor(pointer: Phaser.Input.Pointer, game_objects_under_pointer: Phaser.GameObjects.GameObject[]) {\n    // broadcast game object out of phaser to game model\n    // in order to do this the game objects real state should be stored in svelte/js instead of phaser\n    // and then a \"selected\" flag or similar should be toggled by this method.\n    // This means creating and managing a player inventory of towers.\n  }\n\n  public damageEnemy(enemy: Enemy, bullet: Bullet): void {\n    // only if both enemy and bullet are alive\n    if (enemy.active === true && bullet.active === true) {\n      // we remove the bullet right away\n      bullet.destroy();\n\n      // decrease the enemy hp with BULLET_DAMAGE\n      enemy.receiveDamage(bullet.damage);\n    }\n  }\n}\n"],"names":[],"mappings":"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"}