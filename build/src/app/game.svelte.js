import { SvelteComponent, init, safe_not_equal, element, attr, insert, noop, detach, onMount, binding_callbacks } from '../../node_modules/svelte/internal/index.mjs.js';
import '../../node_modules/phaser/dist/phaser.js';
import Main from '../scenes/main.js';

/* src/app/game.svelte generated by Svelte v3.32.1 */

function create_fragment(ctx) {
	let canvas_1;

	return {
		c() {
			canvas_1 = element("canvas");
			attr(canvas_1, "id", "game-container");
		},
		m(target, anchor) {
			insert(target, canvas_1, anchor);
			/*canvas_1_binding*/ ctx[1](canvas_1);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(canvas_1);
			/*canvas_1_binding*/ ctx[1](null);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let canvas;

	onMount(() => {
		const config = {
			type: Phaser.CANVAS,
			width: 800,
			height: 600,
			canvas,
			scene: Main
		};

		new Phaser.Game(config);
	});

	function canvas_1_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			canvas = $$value;
			$$invalidate(0, canvas);
		});
	}

	return [canvas, canvas_1_binding];
}

class Game extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default Game;
//# sourceMappingURL=game.svelte.js.map
