{"version":3,"file":"wave_manager.js","sources":["../../../../src/scenes/wave_manager.ts"],"sourcesContent":["import { gameModel } from \"../gamelogic/gamemodel\";\nimport type { EnemyWave } from \"../gamelogic/td/enemy_wave_generator\";\nimport type { TowerDefense } from \"../gamelogic/td/tower_defense\";\nimport Enemy from \"./entities/enemies/enemy\";\nimport GreenKnight from \"./entities/enemies/green_knight\";\nimport type { Path } from \"./entities/path\";\nimport type TD from \"./td\";\n\ninterface WaveInfo {\n  total: number,\n  spawned: number,\n  alive: number,\n}\n\nexport class WaveManager {\n  private td_scene: TD;\n  private path: Path;\n  private tower_defense_state!: TowerDefense;\n  private delta_to_next_enemy: number = 0;\n  private current_wave!: EnemyWave;\n  \n  // public wave_info: WaveInfo = { total: 0, spawned: 0, alive: 0 };\n  public enemies!: BetterGroup<Enemy>;\n\n  constructor(scene: TD, path: Path) {\n    this.td_scene = scene;\n    this.path = path;\n    // TODO(jon): When using Enemy as classType \"speed\" is not set as the consutructor is not called ???\n    this.enemies = this.td_scene.add.group({ classType: Enemy, runChildUpdate: true }) as BetterGroup<Enemy>;\n    this.setupWaveSubscription()\n  }\n\n  private setupWaveSubscription() {\n    const unsubscribe_store = gameModel.subscribe((model) => {\n      if (model.tower_defense !== this.tower_defense_state) this.tower_defense_state = model.tower_defense\n    })\n    this.td_scene.events.on(\"destroy\", function () {\n      unsubscribe_store(); // TODO(jon) should this be done in preDestroy instead?\n    }); \n  }\n\n  public update(time: number, delta: number): void {\n    // If it's been X time since last spawn, spawn a new enemy\n    // If there are no enemies remaining from the previously spawn wave, start the next wave.\n    // If there are less then 10 waves avaiable, create a new wave.\n    // When a new wave is created, difficulty should be automatically incremented.\n\n    if (this.tower_defense_state.current_wave_info.spawned < this.tower_defense_state.current_wave_info.total) {\n      this.spawnEnemy(time, delta);\n    } else {\n      this.spawnWave(time, delta);\n    }\n  }\n\n  private spawnEnemy(time: number, delta: number) { \n    this.delta_to_next_enemy -= delta;\n    if (!this.current_wave || this.delta_to_next_enemy > 0) return;\n\n    const enemy = this.enemies.get() as Enemy;\n    // enemy.sprite_name = this.current_wave.enemy_type;\n    // enemy.name = enemy.sprite_name;\n    enemy.setName(this.current_wave.enemy_type);\n    enemy.setSpeed(0.1);\n    console.log('enemy??', enemy)\n    enemy.startOnPath(this.path);\n    \n    this.tower_defense_state.current_wave_info.spawned++;\n    this.tower_defense_state.current_wave_info.alive++;\n    // TODO(jon): Set enemy stats/sprite - need to create a library/map of enemy type ids to their base stats\n    // TODO(jon): Set modifiers (width/height changes, colour changes, auras, effects, etc)\n\n    this.delta_to_next_enemy = this.current_wave.enemy_spawn_delta;\n  }\n\n  private spawnWave(time: number, delta: number) {\n    if (this.tower_defense_state.current_wave_info.spawned < this.tower_defense_state.current_wave_info.total || this.tower_defense_state.current_wave_info.alive) return\n\n    this.current_wave = this.tower_defense_state.getWave();\n    this.tower_defense_state.current_wave_info.total = this.current_wave.mob_count;\n    this.tower_defense_state.current_wave_info.spawned = 0;\n    this.tower_defense_state.current_wave_info.alive = 0;\n\n  }\n}"],"names":[],"mappings":";;;MAca,WAAW;IAUtB,YAAY,KAAS,EAAE,IAAU;QANzB,wBAAmB,GAAW,CAAC,CAAC;QAOtC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;QAEjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,cAAc,EAAE,IAAI,EAAE,CAAuB,CAAC;QACzG,IAAI,CAAC,qBAAqB,EAAE,CAAA;KAC7B;IAEO,qBAAqB;QAC3B,MAAM,iBAAiB,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,KAAK;YAClD,IAAI,KAAK,CAAC,aAAa,KAAK,IAAI,CAAC,mBAAmB;gBAAE,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC,aAAa,CAAA;SACrG,CAAC,CAAA;QACF,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE;YACjC,iBAAiB,EAAE,CAAC;SACrB,CAAC,CAAC;KACJ;IAEM,MAAM,CAAC,IAAY,EAAE,KAAa;;;;;QAMvC,IAAI,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,KAAK,EAAE;YACzG,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAC9B;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAC7B;KACF;IAEO,UAAU,CAAC,IAAY,EAAE,KAAa;QAC5C,IAAI,CAAC,mBAAmB,IAAI,KAAK,CAAC;QAClC,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,mBAAmB,GAAG,CAAC;YAAE,OAAO;QAE/D,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAW,CAAC;;;QAG1C,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;QAC5C,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC,CAAA;QAC7B,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE7B,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;QACrD,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;;;QAInD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC;KAChE;IAEO,SAAS,CAAC,IAAY,EAAE,KAAa;QAC3C,IAAI,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,KAAK,IAAI,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,KAAK;YAAE,OAAM;QAErK,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;QACvD,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;QAC/E,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,OAAO,GAAG,CAAC,CAAC;QACvD,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,KAAK,GAAG,CAAC,CAAC;KAEtD;;;;;"}