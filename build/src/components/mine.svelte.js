import { SvelteComponent, init, safe_not_equal, element, text, insert, append, set_data, noop, detach } from '../../node_modules/svelte/internal/index.mjs.js';

/* src/components/mine.svelte generated by Svelte v3.32.1 */

function create_fragment(ctx) {
	let div;
	let t0_value = /*mine*/ ctx[0].display_name + "";
	let t0;
	let t1;
	let t2_value = /*mine*/ ctx[0].current_timer_ms + "";
	let t2;
	let t3;
	let t4_value = /*mine*/ ctx[0].mine_timer_ms + "";
	let t4;

	return {
		c() {
			div = element("div");
			t0 = text(t0_value);
			t1 = text(" - ");
			t2 = text(t2_value);
			t3 = text(" - ");
			t4 = text(t4_value);
		},
		m(target, anchor) {
			insert(target, div, anchor);
			append(div, t0);
			append(div, t1);
			append(div, t2);
			append(div, t3);
			append(div, t4);
		},
		p(ctx, [dirty]) {
			if (dirty & /*mine*/ 1 && t0_value !== (t0_value = /*mine*/ ctx[0].display_name + "")) set_data(t0, t0_value);
			if (dirty & /*mine*/ 1 && t2_value !== (t2_value = /*mine*/ ctx[0].current_timer_ms + "")) set_data(t2, t2_value);
			if (dirty & /*mine*/ 1 && t4_value !== (t4_value = /*mine*/ ctx[0].mine_timer_ms + "")) set_data(t4, t4_value);
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	
	let { mine } = $$props;

	$$self.$$set = $$props => {
		if ("mine" in $$props) $$invalidate(0, mine = $$props.mine);
	};

	return [mine];
}

class Mine extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { mine: 0 });
	}
}

export default Mine;
//# sourceMappingURL=mine.svelte.js.map
