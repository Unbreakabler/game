import { SvelteComponent, init, safe_not_equal, element, append, create_slot, attr, toggle_class, insert, listen, update_slot, transition_in, transition_out, detach, assign, exclude_internal_props, bubble } from '../../../../svelte/internal/index.mjs.js';

/* node_modules/smelte/src/components/Icon/Icon.svelte generated by Svelte v3.32.1 */

function add_css() {
	var style = element("style");
	style.id = "svelte-zzky5a-style";
	style.textContent = ".reverse.svelte-zzky5a{transform:rotate(180deg)}.tip.svelte-zzky5a{transform:rotate(90deg)}";
	append(document.head, style);
}

function create_fragment(ctx) {
	let i;
	let i_class_value;
	let i_style_value;
	let current;
	let mounted;
	let dispose;
	const default_slot_template = /*#slots*/ ctx[7].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[6], null);

	return {
		c() {
			i = element("i");
			if (default_slot) default_slot.c();
			attr(i, "aria-hidden", "true");
			attr(i, "class", i_class_value = "material-icons icon text-xl select-none " + /*$$props*/ ctx[5].class + " duration-200 ease-in" + " svelte-zzky5a");
			attr(i, "style", i_style_value = /*color*/ ctx[4] ? `color: ${/*color*/ ctx[4]}` : "");
			toggle_class(i, "reverse", /*reverse*/ ctx[2]);
			toggle_class(i, "tip", /*tip*/ ctx[3]);
			toggle_class(i, "text-base", /*small*/ ctx[0]);
			toggle_class(i, "text-xs", /*xs*/ ctx[1]);
		},
		m(target, anchor) {
			insert(target, i, anchor);

			if (default_slot) {
				default_slot.m(i, null);
			}

			current = true;

			if (!mounted) {
				dispose = listen(i, "click", /*click_handler*/ ctx[8]);
				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 64) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[6], dirty, null, null);
				}
			}

			if (!current || dirty & /*$$props*/ 32 && i_class_value !== (i_class_value = "material-icons icon text-xl select-none " + /*$$props*/ ctx[5].class + " duration-200 ease-in" + " svelte-zzky5a")) {
				attr(i, "class", i_class_value);
			}

			if (!current || dirty & /*color*/ 16 && i_style_value !== (i_style_value = /*color*/ ctx[4] ? `color: ${/*color*/ ctx[4]}` : "")) {
				attr(i, "style", i_style_value);
			}

			if (dirty & /*$$props, reverse*/ 36) {
				toggle_class(i, "reverse", /*reverse*/ ctx[2]);
			}

			if (dirty & /*$$props, tip*/ 40) {
				toggle_class(i, "tip", /*tip*/ ctx[3]);
			}

			if (dirty & /*$$props, small*/ 33) {
				toggle_class(i, "text-base", /*small*/ ctx[0]);
			}

			if (dirty & /*$$props, xs*/ 34) {
				toggle_class(i, "text-xs", /*xs*/ ctx[1]);
			}
		},
		i(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(i);
			if (default_slot) default_slot.d(detaching);
			mounted = false;
			dispose();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	let { small = false } = $$props;
	let { xs = false } = $$props;
	let { reverse = false } = $$props;
	let { tip = false } = $$props;
	let { color = "default" } = $$props;

	function click_handler(event) {
		bubble($$self, event);
	}

	$$self.$$set = $$new_props => {
		$$invalidate(5, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
		if ("small" in $$new_props) $$invalidate(0, small = $$new_props.small);
		if ("xs" in $$new_props) $$invalidate(1, xs = $$new_props.xs);
		if ("reverse" in $$new_props) $$invalidate(2, reverse = $$new_props.reverse);
		if ("tip" in $$new_props) $$invalidate(3, tip = $$new_props.tip);
		if ("color" in $$new_props) $$invalidate(4, color = $$new_props.color);
		if ("$$scope" in $$new_props) $$invalidate(6, $$scope = $$new_props.$$scope);
	};

	$$props = exclude_internal_props($$props);
	return [small, xs, reverse, tip, color, $$props, $$scope, slots, click_handler];
}

class Icon extends SvelteComponent {
	constructor(options) {
		super();
		if (!document.getElementById("svelte-zzky5a-style")) add_css();

		init(this, options, instance, create_fragment, safe_not_equal, {
			small: 0,
			xs: 1,
			reverse: 2,
			tip: 3,
			color: 4
		});
	}
}

export default Icon;
//# sourceMappingURL=Icon.svelte.js.map
