import { SvelteComponent, init, safe_not_equal, element, append, text, space, attr, insert, listen, set_data, noop, detach } from '../../node_modules/svelte/internal/index.mjs.js';
import { gameModel } from '../gamelogic/gamemodel.js';
import { saveToStorage } from '../gamelogic/util/saveloadfunctions.js';
import { formatNumber } from '../gamelogic/util/utils.js';

/* src/components/resources.svelte generated by Svelte v3.32.1 */

function add_css() {
	var style = element("style");
	style.id = "svelte-1xsyofj-style";
	style.textContent = ".container.svelte-1xsyofj{display:flex;background-color:rgb(33, 178, 166);padding:5px}.money.svelte-1xsyofj{background-color:rgb(30, 161, 152);width:300px;padding:10px}.coin.svelte-1xsyofj{width:15px;height:15px;background-color:rgb(221, 184, 67);display:inline-block;border-radius:100px;box-shadow:1px 1px}.save.svelte-1xsyofj{margin-left:auto}";
	append(document.head, style);
}

function create_fragment(ctx) {
	let div2;
	let div1;
	let t0;
	let t1;
	let div0;
	let t2;
	let button;
	let mounted;
	let dispose;

	return {
		c() {
			div2 = element("div");
			div1 = element("div");
			t0 = text(/*money*/ ctx[0]);
			t1 = space();
			div0 = element("div");
			t2 = space();
			button = element("button");
			button.textContent = "Save";
			attr(div0, "class", "coin svelte-1xsyofj");
			attr(div1, "class", "money svelte-1xsyofj");
			attr(button, "class", "save svelte-1xsyofj");
			attr(div2, "class", "container svelte-1xsyofj");
		},
		m(target, anchor) {
			insert(target, div2, anchor);
			append(div2, div1);
			append(div1, t0);
			append(div1, t1);
			append(div1, div0);
			append(div2, t2);
			append(div2, button);

			if (!mounted) {
				dispose = listen(button, "click", /*saveGame*/ ctx[1]);
				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*money*/ 1) set_data(t0, /*money*/ ctx[0]);
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div2);
			mounted = false;
			dispose();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let money;
	let gameModelInstance;
	gameModel.subscribe(m => $$invalidate(2, gameModelInstance = m));

	function saveGame() {
		saveToStorage(gameModelInstance);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*gameModelInstance*/ 4) {
			 $$invalidate(0, money = formatNumber(gameModelInstance.wallet.money, 2));
		}
	};

	return [money, saveGame, gameModelInstance];
}

class Resources extends SvelteComponent {
	constructor(options) {
		super();
		if (!document.getElementById("svelte-1xsyofj-style")) add_css();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default Resources;
//# sourceMappingURL=resources.svelte.js.map
