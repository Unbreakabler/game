import { SvelteComponent, init, element, append, safe_not_equal, create_component, space, attr, insert, mount_component, noop, transition_in, transition_out, detach, destroy_component } from '../../node_modules/svelte/internal/index.mjs.js';
import Tabs_1 from '../components/tabs.svelte.js';
import Resources from '../components/resources.svelte.js';
import Game from './game.svelte.js';

/* src/app/app.svelte generated by Svelte v3.32.1 */

function add_css() {
	var style = element("style");
	style.id = "svelte-8q335k-style";
	style.textContent = "body{--tw-bg-opacity:1;background-color:rgba(243, 244, 246, var(--tw-bg-opacity))}.village-container.svelte-8q335k{flex-direction:column;height:100%;width:100%}.main-container.svelte-8q335k{display:flex;flex-direction:column;height:100%}.game-container.svelte-8q335k{display:flex;flex:1}@media only screen and (max-width: 1600px){.game-container.svelte-8q335k{flex-direction:column}.village-container.svelte-8q335k{margin:auto}}";
	append(document.head, style);
}

function create_fragment(ctx) {
	let div2;
	let resources;
	let t0;
	let div1;
	let div0;
	let tabs;
	let t1;
	let game;
	let current;
	resources = new Resources({});
	tabs = new Tabs_1({});
	game = new Game({});

	return {
		c() {
			div2 = element("div");
			create_component(resources.$$.fragment);
			t0 = space();
			div1 = element("div");
			div0 = element("div");
			create_component(tabs.$$.fragment);
			t1 = space();
			create_component(game.$$.fragment);
			attr(div0, "class", "village-container svelte-8q335k");
			attr(div1, "class", "game-container svelte-8q335k");
			attr(div2, "class", "main-container  svelte-8q335k");
		},
		m(target, anchor) {
			insert(target, div2, anchor);
			mount_component(resources, div2, null);
			append(div2, t0);
			append(div2, div1);
			append(div1, div0);
			mount_component(tabs, div0, null);
			append(div1, t1);
			mount_component(game, div1, null);
			current = true;
		},
		p: noop,
		i(local) {
			if (current) return;
			transition_in(resources.$$.fragment, local);
			transition_in(tabs.$$.fragment, local);
			transition_in(game.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(resources.$$.fragment, local);
			transition_out(tabs.$$.fragment, local);
			transition_out(game.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div2);
			destroy_component(resources);
			destroy_component(tabs);
			destroy_component(game);
		}
	};
}

class App extends SvelteComponent {
	constructor(options) {
		super();
		if (!document.getElementById("svelte-8q335k-style")) add_css();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default App;
//# sourceMappingURL=app.svelte.js.map
