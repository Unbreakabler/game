{"version":3,"file":"mine.js","sources":["../../../../../src/gamelogic/village/mine.ts"],"sourcesContent":["import { Exclude, Expose } from \"class-transformer\";\nimport type { Resources, Wallet } from \"../gamemodel\";\nimport type { IIndexable } from \"../td/stats_tower_modifiers\";\nimport { Achievable } from \"./achievable\";\nimport type { MINE } from \"./mines\";\nimport type { Upgrade } from \"./villagebuildings\";\n\nexport class Mine extends Achievable {\n  @Exclude() public display_name: string;\n  @Exclude() public description: string;\n  @Exclude() public upgrades: Upgrade[];\n\n  @Exclude() public difficulty_growth_factor: number;\n  @Exclude() public base_gold_per_level: number = 10;\n\n  //Saveable Members\n  @Expose() public active: boolean; // Whether the mine is enabled or not.\n  @Expose() public current_timer_ms: number = 0;\n  @Expose() public mine_timer_ms: number = 4_000; // time to complete a round of mining\n  @Expose() public production: number; // number of resources mined each round\n  @Expose() public production_multiplier: number;\n\n  public constructor(\n    short_name: MINE, \n    upgrades: Upgrade[], \n    display_name: string, \n    description: string,\n    difficulty_growth_factor: number = 1,\n    active: boolean = false,\n    production: number = 1,\n    production_multiplier: number = 2,\n  ) {\n    super(short_name);\n    this.upgrades = upgrades;\n    this.display_name = display_name;\n    this.description = description;\n    this.difficulty_growth_factor = difficulty_growth_factor;\n    this.active = active;\n    this.production = production;\n    this.production_multiplier = production_multiplier\n  }\n\n  public getDisplayName() {\n    return this.display_name;\n  }\n\n  public getTotalMoneyToLevel(levels_to_calc: number=1): number {\n    //prettier-ignore\n    let total = 0\n    let starting_level = this.level;\n    while (levels_to_calc > 0) {\n      total += this.difficulty_growth_factor *\n      (this.base_gold_per_level + 10 * Math.log(Math.pow(10, starting_level / 10)));\n      levels_to_calc--;\n      starting_level++;\n    }\n    return total;\n  }\n\n  public getMaxLevelAffordable(money: number): number {\n    let level = 0;\n    while (money > this.getTotalMoneyToLevel(level)) {\n      level++;\n    }\n    return level;\n  }\n \n  public requestLevelUp(wallet: Wallet, level: number = 1): void {\n    const cost = this.getTotalMoneyToLevel(level)\n    if (wallet.money >= cost) {\n      wallet.money -= cost;\n      this.level += level;\n      if (this.level > 1) this.production *= this.production_multiplier;\n      this.active = true;\n    }\n  }\n\n  public manuallyMine(): void {\n    if (!this.active) return\n    // TODO(jon): instead of adding 1 second every click this should be upgradeable\n    this.current_timer_ms = this.current_timer_ms + 1000\n  }\n\n  public update(resources: Resources, delta_t_ms: number): void {\n    if (!this.active) return;\n    \n    this.current_timer_ms += delta_t_ms;\n    while (this.current_timer_ms > this.mine_timer_ms) {\n      // inc resource for the mine\n      this.current_timer_ms -= this.mine_timer_ms;\n      if ((resources as IIndexable)[this.short_name] !== undefined) {\n        (resources as IIndexable)[this.short_name] = (resources as IIndexable)[this.short_name] + this.production\n      }\n    }    \n  }\n}"],"names":[],"mappings":"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"}