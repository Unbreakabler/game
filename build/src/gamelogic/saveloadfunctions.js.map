{"version":3,"file":"saveloadfunctions.js","sources":["../../../../src/gamelogic/saveloadfunctions.ts"],"sourcesContent":["import { GameModel, gameModel, SaveData } from \"./gamemodel\";\n// import { compress, decompress } from 'lz-string';\n\n/**\n * This is the key the save data will be stored under inside localstorage\n */\nconst storageName = \"sveltedata\";\n\n/**\n * Load the save data from localstorage.\n * If no data is found just return a new SaveData with default values.\n */\nexport function loadSaveGame(): SaveData {\n  // using a try/catch in case this fails for some reason\n  try {\n    // see if data exists first\n    const uncompressed_saved_data = localStorage.getItem(storageName);\n    if (uncompressed_saved_data) {\n      // get data from localstorage, decompress it using lz-string, then parse it back into a javascript object\n      // const decompressed_state = decompress(uncompressed_saved_data)\n      const decompressed_state = uncompressed_saved_data;\n      if (decompressed_state) {\n        const saveData = JSON.parse(decompressed_state);\n        console.log(\"SaveData loaded:\");\n        console.log(saveData);\n\n        // migrate the data so we know it is good to use\n        dataMigrate(saveData);\n\n        return saveData;\n      }\n    }\n  } catch (error) {\n    console.error(error); // log the error so at least we can see it\n  }\n  // if nothing in storage, or an error occurs, create a new state (for now)\n  return new SaveData();\n}\n\n/**\n * Saves the data to localstorage\n * @param saveData SaveData\n */\nexport function saveSaveGame(saveData: SaveData): void {\n  // if save data exists\n  if (saveData) {\n    // set the last saved time\n    saveData.lastSaved = Date.now();\n\n    try {\n      // Use JSON.stringify to turn the object into a string, then compress with lz-string,\n      // before setting it in localstorage\n      // localStorage.setItem(storageName, compress(JSON.stringify(saveData)));\n      localStorage.setItem(storageName, JSON.stringify(saveData));\n    } catch (error) {\n      console.error(error); // log the error so at least we can see it\n    }\n  }\n}\n\n/**\n * This function will help to update any data that was saved before new variables were added.\n * Otherwise this can cause errors when something you expected to be there is not there.\n */\nfunction dataMigrate(saveData: any): void {\n  // create a new saveData to use as a reference\n  const master: any = new SaveData();\n\n  // get an array of the properties of saveData\n  const keys = Object.getOwnPropertyNames(master);\n\n  // check each property to make sure it exists on the save data\n  keys.forEach((prop) => {\n    if (typeof saveData[prop] === \"undefined\") {\n      console.log(`${prop} was undefined, adding it to saveData`);\n      saveData[prop] = master[prop];\n    }\n  });\n}\n\n/**\n * Resets save game in localstorage and resets the gameModel\n */\nexport function resetSaveGame(): void {\n  // remove from local storage\n  localStorage.removeItem(storageName);\n\n  // update the stored gameModel with a new one\n  gameModel.update((g) => (g = new GameModel()));\n}\n"],"names":[],"mappings":";;AACA;AAEA;;;AAGA,MAAM,WAAW,GAAG,YAAY,CAAC;AAEjC;;;;SAIgB,YAAY;;IAE1B,IAAI;;QAEF,MAAM,uBAAuB,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAClE,IAAI,uBAAuB,EAAE;;;YAG3B,MAAM,kBAAkB,GAAG,uBAAuB,CAAC;YACnD,IAAI,kBAAkB,EAAE;gBACtB,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;gBAChD,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;gBAChC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;;gBAGtB,WAAW,CAAC,QAAQ,CAAC,CAAC;gBAEtB,OAAO,QAAQ,CAAC;aACjB;SACF;KACF;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACtB;;IAED,OAAO,IAAI,QAAQ,EAAE,CAAC;AACxB,CAAC;AAED;;;;SAIgB,YAAY,CAAC,QAAkB;;IAE7C,IAAI,QAAQ,EAAE;;QAEZ,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAEhC,IAAI;;;;YAIF,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC7D;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACtB;KACF;AACH,CAAC;AAED;;;;AAIA,SAAS,WAAW,CAAC,QAAa;;IAEhC,MAAM,MAAM,GAAQ,IAAI,QAAQ,EAAE,CAAC;;IAGnC,MAAM,IAAI,GAAG,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;;IAGhD,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI;QAChB,IAAI,OAAO,QAAQ,CAAC,IAAI,CAAC,KAAK,WAAW,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,uCAAuC,CAAC,CAAC;YAC5D,QAAQ,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;SAC/B;KACF,CAAC,CAAC;AACL;;;;"}