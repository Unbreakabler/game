{"version":3,"file":"tower_bullet.js","sources":["../../../../../src/scenes/entities/tower_bullet.ts"],"sourcesContent":["import { GameModel, gameModel } from \"../../gamelogic/gamemodel\";\nimport type { TowerInfo } from \"../../gamelogic/td/tower_defense\";\n\nexport default class Bullet extends Phaser.GameObjects.Image {\n  public dx: number = 0;\n  public dy: number = 0;\n  public lifespan: number = 0;\n  public speed: number = 0;\n  public damage: number = 0;\n  private tower_id!: string;\n  private tower!: TowerInfo | undefined;\n\n  public constructor(scene: Phaser.Scene) {\n    super(scene, 0, 0, \"small_bullet\");\n    scene.add.existing(this);\n    scene.physics.add.existing(this);\n    this.dx = 0;\n    this.dy = 0;\n    this.lifespan = 0;\n    this.speed = Phaser.Math.GetSpeed(600, 1);\n\n    gameModel.subscribe((m) => {\n      this.tower = m.tower_defense.getTower(this.tower_id)\n      // TODO(jon): move this damage tracking into the tower state object\n    });\n  }\n\n  public fire(tower_id: string, x: number, y: number, angle: number, range: number, damage: number): void {\n    this.tower_id = tower_id;\n    this.setActive(true);\n    this.setVisible(true);\n    this.setPosition(x, y);\n    this.setRotation(angle - Phaser.Math.PI2 / 4); // FIXME(jon): not necessary if proj is round\n    this.dx = Math.cos(angle); //\n    this.dy = Math.sin(angle);\n    this.lifespan = range * 1.3;\n    this.damage = damage;\n  }\n\n  public update(time: number, delta: number): void {\n    this.lifespan -= delta;\n\n    this.x += this.dx * (this.speed * delta);\n    this.y += this.dy * (this.speed * delta);\n\n    if (this.lifespan <= 0) {\n      this.setActive(false);\n      this.setVisible(false);\n    }\n  }\n\n  // returns damage\n  public hit(): number {\n    if (this.tower) {\n      if (!this.tower.damage_dealt_this_prestige) {\n        this.tower.damage_dealt_this_prestige = 0\n      }\n      this.tower.damage_dealt_this_prestige += this.damage;\n    }\n    this.destroy();\n    return this.damage;\n  }\n}\n"],"names":[],"mappings":";;MAGqB,MAAO,SAAQ,MAAM,CAAC,WAAW,CAAC,KAAK;IAS1D,YAAmB,KAAmB;QACpC,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,cAAc,CAAC,CAAC;QAT9B,OAAE,GAAW,CAAC,CAAC;QACf,OAAE,GAAW,CAAC,CAAC;QACf,aAAQ,GAAW,CAAC,CAAC;QACrB,UAAK,GAAW,CAAC,CAAC;QAClB,WAAM,GAAW,CAAC,CAAC;QAMxB,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACzB,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QAE1C,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;;SAErD,CAAC,CAAC;KACJ;IAEM,IAAI,CAAC,QAAgB,EAAE,CAAS,EAAE,CAAS,EAAE,KAAa,EAAE,KAAa,EAAE,MAAc;QAC9F,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,KAAK,GAAG,GAAG,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;IAEM,MAAM,CAAC,IAAY,EAAE,KAAa;QACvC,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC;QAEvB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;QACzC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;QAEzC,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,EAAE;YACtB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACtB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SACxB;KACF;;IAGM,GAAG;QACR,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,0BAA0B,EAAE;gBAC1C,IAAI,CAAC,KAAK,CAAC,0BAA0B,GAAG,CAAC,CAAA;aAC1C;YACD,IAAI,CAAC,KAAK,CAAC,0BAA0B,IAAI,IAAI,CAAC,MAAM,CAAC;SACtD;QACD,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;"}