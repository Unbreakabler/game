import { SvelteComponent, init, safe_not_equal, element, append, create_component, mount_component, transition_in, transition_out, destroy_component, space, empty, attr, insert, group_outros, check_outros, detach, destroy_each } from '../../node_modules/svelte/internal/index.mjs.js';
import Job_base from '../components/job_base.svelte.js';
import { jobs } from '../gamelogic/jobs.js';

/* src/app/job_manager.svelte generated by Svelte v3.32.1 */

function add_css() {
	var style = element("style");
	style.id = "svelte-1xzhl4s-style";
	style.textContent = "header.svelte-1xzhl4s{display:flex}div.svelte-1xzhl4s{flex:1}";
	append(document.head, style);
}

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	return child_ctx;
}

// (19:0) {#each job_list as job}
function create_each_block(ctx) {
	let jobbase;
	let current;
	jobbase = new Job_base({ props: { job: /*job*/ ctx[1] } });

	return {
		c() {
			create_component(jobbase.$$.fragment);
		},
		m(target, anchor) {
			mount_component(jobbase, target, anchor);
			current = true;
		},
		p(ctx, dirty) {
			const jobbase_changes = {};
			if (dirty & /*job_list*/ 1) jobbase_changes.job = /*job*/ ctx[1];
			jobbase.$set(jobbase_changes);
		},
		i(local) {
			if (current) return;
			transition_in(jobbase.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(jobbase.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			destroy_component(jobbase, detaching);
		}
	};
}

function create_fragment(ctx) {
	let header;
	let t9;
	let each_1_anchor;
	let current;
	let each_value = /*job_list*/ ctx[0];
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	return {
		c() {
			header = element("header");

			header.innerHTML = `<div class="svelte-1xzhl4s">Name</div> 
  <div class="svelte-1xzhl4s">Current Level</div> 
  <div class="svelte-1xzhl4s">Income</div> 
  <div class="svelte-1xzhl4s">Required Xp</div> 
  <div class="svelte-1xzhl4s">Max level Reached</div>`;

			t9 = space();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = empty();
			attr(header, "class", "svelte-1xzhl4s");
		},
		m(target, anchor) {
			insert(target, header, anchor);
			insert(target, t9, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			insert(target, each_1_anchor, anchor);
			current = true;
		},
		p(ctx, [dirty]) {
			if (dirty & /*job_list*/ 1) {
				each_value = /*job_list*/ ctx[0];
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d(detaching) {
			if (detaching) detach(header);
			if (detaching) detach(t9);
			destroy_each(each_blocks, detaching);
			if (detaching) detach(each_1_anchor);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let job_list;
	 $$invalidate(0, job_list = jobs);
	return [job_list];
}

class Job_manager extends SvelteComponent {
	constructor(options) {
		super();
		if (!document.getElementById("svelte-1xzhl4s-style")) add_css();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default Job_manager;
//# sourceMappingURL=job_manager.svelte.js.map
