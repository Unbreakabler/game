{"version":3,"file":"turret.js","sources":["../../../../../../src/scenes/entities/towers/turret.ts"],"sourcesContent":["const DEFAULT_RANGE = 200;\nconst DEFAULT_ATTACK_SPEED = 1000;\nconst DEFAULT_DAMAGE = 50;\n\nconst PLACEABLE_MIN_DISTANCE_FROM_PATH = 50;\n\nimport type TD from \"../../td\";\nimport Bullet from \"../tower_bullet\";\nimport type Enemy from \"../enemies/enemy\";\n\ntype displayType = 'range' | 'placement'\n\nexport default class Turret extends Phaser.GameObjects.Image {\n  public range = DEFAULT_RANGE;\n  public attack_speed = DEFAULT_ATTACK_SPEED;\n  public damage = DEFAULT_DAMAGE;\n  public display_type: displayType = 'range';\n  public is_selected = true;\n  public show_range = false;\n  \n  private is_placed = false;\n  private projectiles: BetterGroup<Bullet>;\n  public display_range:  Phaser.GameObjects.Arc;\n  private td_scene: TD;\n  private next_tick = 0;\n  \n\n  public constructor(\n    td_scene: TD,\n    x: number = 0,\n    y: number = 0,\n    sprite_name: string = \"turret\",\n    range: number = DEFAULT_RANGE,\n    attack_speed: number = DEFAULT_ATTACK_SPEED,\n    damage: number = DEFAULT_DAMAGE,\n  ) {\n    super(td_scene, x, y, sprite_name);\n    this.td_scene = td_scene;\n    this.range = range;\n    this.attack_speed = attack_speed;\n    this.damage = damage;\n    this.projectiles = this.td_scene.add.group({ classType: Bullet, active: true, runChildUpdate: true }) as BetterGroup<Bullet>;\n    this.display_range = this.td_scene.add.circle(0, 0, this.range, 0xff0000, 0.5);\n  }\n\n  public update(time: number, delta: number): void {\n    //Look at near enemies\n    this.display_range.x = this.x;\n    this.display_range.y = this.y;\n    this.displayRange()\n    \n    if (!this.is_placed) return;\n\n    const e = this.findClosestEnemyInRange(20);\n\n    if (e) {\n      this.targetEnemy(e);\n    } else {\n      this.angle = 90;\n    }\n    // time to shoot\n    if (time > this.next_tick) {\n      //If fired at enemy, start cooldown\n      if (this.attemptToFire()) this.next_tick = time + this.attack_speed;\n    }\n    this.display_range.x = this.x;\n    this.display_range.y = this.y;\n    this.displayRange()\n  }\n\n  public preDestroy() {\n    this.is_selected = false;\n    this.displayRange();\n  }\n\n  private isPlaceable(\n    place_x: number,\n    place_y: number,\n  ): boolean {\n    const min_dist = this.td_scene.path.getPoints(this.td_scene.path.getLength() / 20).reduce((acc, point) => {\n      return Math.min(Phaser.Math.Distance.Between(place_x, place_y, point.x, point.y), acc);\n    }, 1000);\n    if (min_dist < PLACEABLE_MIN_DISTANCE_FROM_PATH) {\n      // console.error('Can not place turret next to path')\n      return false;\n    }\n\n    for (const t of this.td_scene.turrets.getChildren()) {\n      if (t == this.td_scene.selection) continue; // current turret on cursor\n\n      const min_x = t.x - t.width/2\n      const max_x = t.x + t.width/2\n      const min_y = t.y - t.height/2\n      const max_y = t.y + t.height/2\n  \n      const new_min_x = place_x - this.width/2\n      const new_max_x = place_x + this.width/2\n      const new_min_y = place_y - this.height/2\n      const new_max_y = place_y + this.height/2\n  \n      const x_overlap = Math.max(0, Math.min(max_x, new_max_x) - Math.max(min_x, new_min_x));\n      const y_overlap = Math.max(0, Math.min(max_y, new_max_y) - Math.max(min_y, new_min_y));\n\n      if (x_overlap * y_overlap > 0) {\n        // console.error('Can not place a turret overlapping another turret')\n        return false;\n      }\n    }\n    return true;\n  }\n\n  public place(place_x: number, place_y: number): boolean {\n    if (!this.isPlaceable(place_x, place_y)) {\n      console.error(`Error placing turret @ x:${place_x}, y:${place_y}`);\n      return false;\n    }\n    this.x = place_x;\n    this.y = place_y;\n    this.setActive(true);\n    this.setVisible(true);\n    this.setInteractive();\n    console.log(`placing turret @ x:${place_x}, y:${place_y}`);\n    this.is_placed = true;\n    this.is_selected = false;\n    return true;\n  }\n\n  public displayRange() {\n    const red = 0xff0000\n    const green = 0x00ff00\n    const blue = 0x0000ff\n    if (this.is_selected && this.show_range) {\n      this.display_range.setVisible(true);\n      if (!this.is_placed) {\n        if (this.isPlaceable(this.x, this.y)) {\n          this.display_range.setFillStyle(green, 0.3);\n        } else {\n          this.display_range.setFillStyle(red, 0.3);\n        }\n      } else {\n        this.display_range.setFillStyle(blue, 0.3);\n      }\n    } else {\n      this.display_range.setVisible(false);\n    }\n  }\n\n  public attemptToFire(): boolean {\n    //Enemy Found\n    const e = this.findClosestEnemyInRange();\n    if (e) {\n      //Add bullet\n      this.fireBullet(this.x, this.y, this.getAngleToEnemy(e));\n      //Update where turret is pointing\n      this.targetEnemy(e);\n      return true;\n    }\n    return false;\n  }\n\n  private findClosestEnemyInRange(range_bonus: number = 0): Enemy | undefined {\n    const enemies = this.td_scene.enemies;\n    let closest_enemy: Enemy | undefined;\n    let closest_distance = Number.MAX_VALUE;\n    for (const e of enemies.getChildren()) {\n      const d = Phaser.Math.Distance.Between(this.x, this.y, e.x, e.y);\n      if (d < this.range + range_bonus) {\n        if (d < closest_distance) {\n          closest_distance = d;\n          closest_enemy = e;\n        }\n      }\n    }\n    return closest_enemy;\n  }\n\n  private getAngleToEnemy(enemy: Enemy): number {\n    return Phaser.Math.Angle.Between(this.x, this.y, enemy.x, enemy.y);\n  }\n\n  private targetEnemy(enemy: Enemy): void {\n    this.rotation = this.getAngleToEnemy(enemy) + Math.PI / 2;\n  }\n\n  public fireBullet(x: number, y: number, angle: number): void {\n    const b = this.projectiles.get();\n    //TODO - Make bullets smart so they follow units and delete selves when enemy is dead\n    b.fire(x, y, angle, this.range, this.damage);\n  }\n\n  public enableBulletCollisions(enemies: BetterGroup<Enemy>): void {\n    this.scene.physics.add.overlap(enemies, this.projectiles, this.td_scene.damageEnemy as ArcadePhysicsCallback);\n  }\n}\n"],"names":[],"mappings":"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"}