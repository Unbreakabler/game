{"version":3,"file":"notifications.js","sources":["../../../../../src/gamelogic/util/notifications.ts"],"sourcesContent":["import { writable } from \"svelte/store\";\n\n/**\n * Svelte store to hold an array of messages\n */\nexport const messageQueue = writable([] as Message[]);\n\n/**\n * How long should each message be displayed in ms\n */\nconst messageTime: number = 4000;\n\n/**\n * Used to get a unique id for each message\n */\nlet idNumber = 0;\n\n/**\n * Simple class to hold a string and an ID used to display messages to the player.\n * This could be expanded to include icons, sound effects, css classes for animations etc.\n */\nexport class Message {\n  public message: string;\n  public id: number;\n\n  public constructor(message: string) {\n    this.message = message;\n    this.id = idNumber++;\n  }\n}\n\n/**\n * Function to add a message to the message queue\n * @param message Message to be shown to the player\n */\nexport function sendMessage(message: string): void {\n  // create a message object\n  const notification = new Message(message);\n\n  // add the message to the message queue\n  messageQueue.update((m) => (m = [...m, notification]));\n\n  // create a timeout to automatically remove the message after messageTime elapsed\n  setTimeout(() => {\n    messageQueue.update((m) => (m = m.filter((e) => e.id != notification.id)));\n  }, messageTime);\n}\n"],"names":[],"mappings":";;AAEA;;;MAGa,YAAY,GAAG,QAAQ,CAAC,EAAe,EAAE;AAEtD;;;AAGA,MAAM,WAAW,GAAW,IAAI,CAAC;AAEjC;;;AAGA,IAAI,QAAQ,GAAG,CAAC,CAAC;AAEjB;;;;MAIa,OAAO;IAIlB,YAAmB,OAAe;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,EAAE,GAAG,QAAQ,EAAE,CAAC;KACtB;CACF;AAED;;;;SAIgB,WAAW,CAAC,OAAe;;IAEzC,MAAM,YAAY,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;;IAG1C,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;;IAGvD,UAAU,CAAC;QACT,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KAC5E,EAAE,WAAW,CAAC,CAAC;AAClB;;;;"}