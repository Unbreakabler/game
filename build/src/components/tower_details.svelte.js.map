{"version":3,"file":"tower_details.svelte.js","sources":["../../../../src/components/tower_details.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { GameModel, gameModel } from \"../gamelogic/gamemodel\";\n  import type { TargetingMode, TowerInfo } from \"../gamelogic/td/tower_defense\";\n\n  let gameModelInstance: GameModel;\n  gameModel.subscribe((m) => (gameModelInstance = m));\n\n  $: selection = gameModelInstance.tower_defense.selection\n  let tower_info: TowerInfo | undefined = undefined;\n  $: if (selection) {\n    tower_info = gameModelInstance.tower_defense.getTower(selection.id) || undefined;\n  } else {\n    tower_info = undefined;\n  }\n\n  let tower_stats: any = undefined;\n  $: if (selection) {\n    tower_stats = gameModelInstance.tower_defense.getTowerStats(selection.id)\n  } else {\n    tower_stats = undefined;\n  }\n\n  let dps: number = 0;\n  $: if (tower_info) {\n    dps = tower_info.attributes.damage * (1000 / tower_info.attributes.attack_speed)\n  }\n\n  // TODO(jon): Once there are tower types with unique targeting modes this should be pulled from tower info\n  const targeting_modes: TargetingMode[] = ['first', 'last', 'strongest', 'closest'];\n\n  const changeTargetingMode = (x: number) => {\n    // find index of targeting_mode\n    // select next/prev item in list, or roll back to start (modulo)\n    const cur_index = targeting_modes.findIndex(v => v === tower_info?.status.targeting_mode)\n    const new_index = (cur_index + x) % targeting_modes.length;\n    const new_targeting_mode = targeting_modes[new_index]\n    if (tower_info) tower_info.status.targeting_mode = new_targeting_mode;\n  }\n\n</script>\n\n{#if tower_info}\n  <div class='details'>\n    <div>\n      <span>targeting: {tower_info.status.targeting_mode}</span>\n      <button on:click={() => changeTargetingMode(1)}>Next</button>\n      <button on:click={() => changeTargetingMode(-1)}>Prev</button>\n    </div>\n    <div>lifetime kills: {tower_stats.kills.lifetime + tower_stats.kills.prestige}</div>\n    <div>prestige kills: {tower_stats.kills.prestige}</div>\n    <div>lifetime damage: {tower_stats.damage.lifetime + tower_stats.damage.prestige}</div>\n    <div>prestige damage: {tower_stats.damage.prestige}</div>\n    <div>{tower_info.status.type}</div>\n    <div>dps: {dps}</div>\n    <div>damage per hit: {tower_info.attributes.damage}</div>\n    <div>attack time: {tower_info.attributes.attack_speed/1000}s</div>\n    <div>proj mods: {JSON.stringify(tower_info.attributes.projectile_modifiers, null, 2)}</div>\n  </div>\n{/if}\n\n<style>\n  .details {\n    background: #ffffff;\n    height: 100%;\n    padding: 10px;\n    filter: drop-shadow(0 0 0.75rem crimson);\n    animation: slide 100ms;\n    transform: translateX(0);\n  }\n\n  @keyframes slide {\n    0% {\n      transform: translateX(200px);\n    }\n    100% {\n      transform: translateX(0px);\n    }\n  }\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;+BA4CwB,GAAU,IAAC,MAAM,CAAC,cAAc;;;;;;;;;gCAI9B,GAAW,IAAC,KAAK,CAAC,QAAQ,mBAAG,GAAW,IAAC,KAAK,CAAC,QAAQ;;;;;iCACvD,GAAW,IAAC,KAAK,CAAC,QAAQ;;;;;iCACzB,GAAW,IAAC,MAAM,CAAC,QAAQ,mBAAG,GAAW,IAAC,MAAM,CAAC,QAAQ;;;;;iCACzD,GAAW,IAAC,MAAM,CAAC,QAAQ;;;;gCAC5C,GAAU,IAAC,MAAM,CAAC,IAAI;;;;;;;;;gCAEN,GAAU,IAAC,UAAU,CAAC,MAAM;;;;;gCAC/B,GAAU,IAAC,UAAU,CAAC,YAAY,GAAC,IAAI;;;;;;iBACzC,IAAI,CAAC,SAAS,gBAAC,GAAU,IAAC,UAAU,CAAC,oBAAoB,EAAE,IAAI,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBAHxE,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2EATM,GAAU,IAAC,MAAM,CAAC,cAAc;6EAI9B,GAAW,IAAC,KAAK,CAAC,QAAQ,mBAAG,GAAW,IAAC,KAAK,CAAC,QAAQ;+EACvD,GAAW,IAAC,KAAK,CAAC,QAAQ;+EACzB,GAAW,IAAC,MAAM,CAAC,QAAQ,mBAAG,GAAW,IAAC,MAAM,CAAC,QAAQ;+EACzD,GAAW,IAAC,MAAM,CAAC,QAAQ;6EAC5C,GAAU,IAAC,MAAM,CAAC,IAAI;gDACjB,GAAG;6EACQ,GAAU,IAAC,UAAU,CAAC,MAAM;6EAC/B,GAAU,IAAC,UAAU,CAAC,YAAY,GAAC,IAAI;8DACzC,IAAI,CAAC,SAAS,gBAAC,GAAU,IAAC,UAAU,CAAC,oBAAoB,EAAE,IAAI,EAAE,CAAC;;;;;;;;;;;;+BAflF,GAAU;;;;;;;;;;;;sBAAV,GAAU;;;;;;;;;;;;;;;;;;;;;;;;;KArCT,iBAA4B;CAChC,SAAS,CAAC,SAAS,CAAE,CAAC,oBAAM,iBAAiB,GAAG,CAAC;KAG7C,UAAU,GAA0B,SAAS;KAO7C,WAAW,GAAQ,SAAS;KAO5B,GAAG,GAAW,CAAC;;;OAMb,eAAe,IAAqB,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,SAAS;;OAE3E,mBAAmB,GAAI,CAAS;;;QAG9B,SAAS,GAAG,eAAe,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,UAAU,EAAE,MAAM,CAAC,cAAc;;QAClF,SAAS,IAAI,SAAS,GAAG,CAAC,IAAI,eAAe,CAAC,MAAM;QACpD,kBAAkB,GAAG,eAAe,CAAC,SAAS;MAChD,UAAU,kBAAE,UAAU,CAAC,MAAM,CAAC,cAAc,GAAG,kBAAkB;;;6BAS3C,mBAAmB,CAAC,CAAC;+BACrB,mBAAmB,EAAE,CAAC;;;;oBAvC/C,SAAS,GAAG,iBAAiB,CAAC,aAAa,CAAC,SAAS;;;;QAEjD,SAAS;oBACd,UAAU,GAAG,iBAAiB,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,KAAK,SAAS;;oBAEhF,UAAU,GAAG,SAAS;;;;;QAIjB,SAAS;oBACd,WAAW,GAAG,iBAAiB,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE;;oBAExE,WAAW,GAAG,SAAS;;;;;QAIlB,UAAU;oBACf,GAAG,GAAG,UAAU,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,GAAG,UAAU,CAAC,UAAU,CAAC,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;"}