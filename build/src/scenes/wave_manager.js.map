{"version":3,"file":"wave_manager.js","sources":["../../../../src/scenes/wave_manager.ts"],"sourcesContent":["import { gameModel } from \"../gamelogic/gamemodel\";\nimport ENEMY_BASE_STATS, { applyEnemyModifiers } from \"../gamelogic/td/stats_base_enemies\";\nimport type { EnemyWave, ModifierId } from \"../gamelogic/td/enemy_wave_generator\";\nimport type { TowerDefense } from \"../gamelogic/td/tower_defense\";\nimport Enemy from \"./entities/enemies/enemy\";\nimport type { Path } from \"./entities/path\";\nimport type TD from \"./td\";\n\nexport class WaveManager {\n  private td_scene: TD;\n  private path: Path;\n  private tower_defense_state!: TowerDefense;\n  private delta_to_next_enemy: number = 0;\n  private current_wave!: EnemyWave;\n  \n  public enemies!: BetterGroup<Enemy>;\n\n  constructor(scene: TD, path: Path) {\n    this.td_scene = scene;\n    this.path = path;\n    this.enemies = this.td_scene.add.group({ classType: Enemy }) as BetterGroup<Enemy>;\n    this.setupWaveSubscription()\n  }\n\n  private setupWaveSubscription() {\n    const unsubscribe_store = gameModel.subscribe((model) => {\n      if (model.tower_defense !== this.tower_defense_state) this.tower_defense_state = model.tower_defense\n    })\n    this.td_scene.events.on(\"destroy\", function () {\n      unsubscribe_store(); // TODO(jon) should this be done in preDestroy instead?\n    }); \n  }\n\n  public update(time: number, delta: number): void {\n    for (const enemy of this.enemies.getChildren()) {\n      enemy.update(time, delta);\n    }\n    if (this.current_wave && (this.tower_defense_state.current_wave_info.spawned < this.tower_defense_state.current_wave_info.total)) {\n      this.spawnEnemy(time, delta);\n    } else {\n      this.spawnWave(time, delta);\n    }\n  }\n\n  private spawnEnemy(time: number, delta: number) { \n    this.delta_to_next_enemy -= delta;\n    if (this.delta_to_next_enemy > 0) return;\n\n    const enemy = this.enemies.get() as Enemy;\n    enemy.setEnemyName(this.current_wave.enemy_type);\n\n    // Set enemy stats/sprite\n    const enemy_stats = ENEMY_BASE_STATS[this.current_wave.enemy_type]\n    const modified_status = applyEnemyModifiers(enemy_stats, this.current_wave.modifier_ids)\n    enemy.setSpeed(modified_status?.speed);\n    enemy.setHealthPoints(modified_status?.health_points)\n    enemy.setExperience(modified_status?.experience);\n    enemy.setValue(modified_status?.money);\n    \n    // Set difficulty per mob, we can show this number when selecting the mobs.\n    enemy.setDifficulty(this.current_wave.mob_difficulty)\n    // Set modifiers (width/height changes, colour changes, auras, effects, etc)\n    enemy.setModifiers(this.current_wave.modifier_ids)\n    enemy.startOnPath(this.path);\n    \n    this.tower_defense_state.current_wave_info.spawned++;\n    this.tower_defense_state.current_wave_info.alive++;\n\n    this.delta_to_next_enemy = this.current_wave.enemy_spawn_delta;\n  }\n\n  private spawnWave(time: number, delta: number) {\n    if (this.current_wave && (this.tower_defense_state.current_wave_info.spawned < this.tower_defense_state.current_wave_info.total || this.tower_defense_state.current_wave_info.alive)) return\n    \n    this.tower_defense_state.spawnNextWave();\n    this.current_wave = this.tower_defense_state.getCurrentWave();\n    this.tower_defense_state.current_wave_info.total = this.current_wave.mob_count;\n    this.tower_defense_state.current_wave_info.spawned = 0;\n    this.tower_defense_state.current_wave_info.alive = 0;\n  }\n\n  public recordEnemyLeak() {\n    this.tower_defense_state.current_wave_info.alive--;\n    this.tower_defense_state.current_wave_info.leaked++;\n  }\n}"],"names":[],"mappings":"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"}