{"version":3,"file":"enemy.js","sources":["../../../../../../src/scenes/entities/enemies/enemy.ts"],"sourcesContent":["import type TD from \"../../td\";\nimport { CombatText } from '../combat_text';\nimport { HealthBar } from '../health_bar';\nimport { EnemyModifier, ENEMY_MODIFIERS, ModifierId } from '../../../gamelogic/td/enemy_wave_generator'\n\nconst DEFAULT_ENEMY_SPEED = 1 / 10;\nconst DEFAULT_ENEMY_HP = 100;\n\n// TODO(jon): show health bar when hp is below 100%\n// TODO(jon): show floating combat text when an enemy takes damage.\n// potentially also show the combat text on the tower? probably at least show the log when you select the tower.\n\nexport default class Enemy extends Phaser.GameObjects.Sprite {\n  public follower: { t: number; vec: Phaser.Math.Vector2 };\n  public health_points = DEFAULT_ENEMY_HP;\n  public name: string;\n\n  private path: Phaser.Curves.Path | null = null;\n  private speed: number = DEFAULT_ENEMY_SPEED;\n  private original_speed: number;\n  private original_health_points: number;\n  private sprite_name: string;\n  private prev_ang: number = 0;\n  private td_scene: TD;\n  private health_bar: HealthBar;\n  private modifiers: EnemyModifier[] = [];\n  private difficulty: number = 0;\n\n  public constructor(\n    td_scene: TD,\n    x: number = 0,\n    y: number = 0,\n    sprite_name: string,\n    speed: number = DEFAULT_ENEMY_SPEED,\n    health_points: number = DEFAULT_ENEMY_HP,\n  ) {\n    super(td_scene as Phaser.Scene, x, y, sprite_name);\n    td_scene.physics.add.existing(this);\n    this.td_scene = td_scene;\n    this.sprite_name = sprite_name;\n    this.name = this.sprite_name // Likely the enemy name and sprite_name will differ in future\n    this.follower = { t: 0, vec: new Phaser.Math.Vector2() };\n    this.speed = speed || DEFAULT_ENEMY_SPEED;\n    this.original_speed = this.speed;\n    this.health_points = health_points;\n    this.original_health_points = this.health_points; // health_points will need to be set for each enemy\n    this.setActive(true);\n    // this.setVisible(true);\n\n    this.health_bar = new HealthBar(td_scene, x, y - this.height, this.width, this.health_points)\n  }\n\n  // Allows reuse of enemy sprites\n  private resetEnemy(): void {\n    if (!this.path) return;\n    if (!this.speed) this.speed = DEFAULT_ENEMY_SPEED;\n    // this.setActive(true);\n    this.setVisible(true);\n    // set the t parameter at the start of the path\n    this.follower.t = 0;\n\n    // get x and y of the given t point\n    this.path.getPoint(this.follower.t, this.follower.vec);\n\n    // set the x and y of our enemy to the received from the previous step\n    this.setPosition(this.follower.vec.x, this.follower.vec.y);\n    this.health_points = this.original_health_points;\n    this.speed = this.original_speed;\n  }\n\n  public setSpeed(speed: number): void {\n    this.speed = speed;\n    this.original_speed = this.speed;\n  }\n\n  public setName(name: string): this {\n    this.name = name;\n    this.sprite_name = name;\n    return this;\n  }\n\n  public setHealthPoints(health_points: number): void {\n    this.health_points = health_points;\n    this.original_health_points = this.health_points;\n  }\n\n  public setDifficulty(difficulty: number): void {\n    this.difficulty = difficulty;\n  }\n\n  public setModifiers(modifiers: string[]): void {\n    // this.modifiers = modifiers;\n    // reset to display height/width to original size\n    this.displayHeight = this.height\n    this.displayWidth = this.width\n\n    for (let i = 0; i < modifiers.length; i ++) {\n      const mod = ENEMY_MODIFIERS[modifiers[i] as ModifierId]\n      if (!mod) return\n      this.modifiers[i] = mod\n      // group mods have already affected group size, skip, should be removed from list.\n      if (mod.mod_type === 'group') continue;\n\n\n      if (mod.stat_multipliers?.health_points) {\n        this.original_health_points *= mod.stat_multipliers.health_points\n        this.health_points *= mod.stat_multipliers.health_points\n      }\n\n      if (mod.stat_multipliers?.movement_speed) {\n        this.setSpeed(this.speed * mod.stat_multipliers.movement_speed)\n      }\n\n      if (mod.visual_modifiers?.height) {\n        this.displayHeight *= mod.visual_modifiers.height\n      }\n\n      if (mod.visual_modifiers?.width) {\n        this.displayWidth *= mod.visual_modifiers?.width\n      }\n      \n    }\n  }\n\n  public startOnPath(path: Phaser.Curves.Path): void {\n    this.path = path;\n    this.resetEnemy();\n  }\n\n  public update(time: number, delta: number): void {\n    // move the t point along the path, 0 is the start and 0 is the end\n    if (!this.path) return; // skip updates if path has not be set by startOnPath\n    this.health_bar.setCurrentHp(this.health_points)\n    this.health_bar.setPosition(this.x, this.y - this.height)\n    this.follower.t += (this.speed / this.path.getLength()) * delta;\n\n    // get the new x and y coordinates in vec\n    this.path.getPoint(this.follower.t, this.follower.vec);\n    \n    // angle between 0 and 2*PI\n    const ang = Phaser.Math.Angle.Between(this.x, this.y, this.follower.vec.x, this.follower.vec.y) + Math.PI;\n    if (ang != this.prev_ang) {\n      if (ang < 1/4 * Math.PI || ang >= 7/4 * Math.PI) {\n        // right\n        this.anims.play(`${this.sprite_name}-walking-left`, true)\n      } else if (ang < 7/4 * Math.PI && ang >= 5/4 * Math.PI) {\n        // down\n        this.anims.play(`${this.sprite_name}-walking-down`, true)\n      } else if (ang < 5/4 * Math.PI && ang >= 3/4 * Math.PI) {\n        // left\n        this.anims.play(`${this.sprite_name}-walking-right`, true)\n      } else if (ang < 3/4 * Math.PI && ang >= 1/4 * Math.PI) {\n        // up\n        this.anims.play(`${this.sprite_name}-walking-up`, true)\n      }\n    }\n    this.prev_ang = ang;\n\n    // update enemy x and y to the newly obtained x and y\n    this.setPosition(this.follower.vec.x, this.follower.vec.y);\n    // We should probably add a small amount of left/right movement based on the forward vector so that every\n    // enemy isn't following an identical path\n\n    // if we have reached the end of the path, remove the enemy\n    if (this.follower.t >= 1) {\n      this.setActive(false);\n      this.setVisible(false);\n      this.destroy();\n      this.td_scene.wave_manager.recordEnemyLeak();\n    }\n  }\n\n  public preDestroy() {\n    this.health_bar.destroy();\n  }\n\n  public receiveDamage(damage: number): boolean {\n    this.health_points -= damage;\n    // combat text is self managed and destroys itself from the scene after it's lifespan (default 250ms) has expired.\n    // Generates a new floating combat text instance for each instance of damage\n    new CombatText(this.td_scene, this.x, this.y - this.height, `${damage}`);\n    if (this.health_points > 0) return true;\n    this.setActive(false);\n    this.setVisible(false);\n    this.destroy();\n    return false;\n  }\n}\n"],"names":[],"mappings":"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"}